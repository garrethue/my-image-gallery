{"version":3,"sources":["components/Buttons/DeleteButton.js","components/Buttons/LikeButton.js","components/Buttons/ExpandButton.js","components/ImageCard.js","components/GalleryList.js","components/InputForm.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["DeleteButton","props","Button","onClick","deleteItem","imgObj","id","size","color","width","height","viewBox","className","fill","xmlns","fillRule","d","LikeButton","event","updateLike","likes","ExpandButton","href","path","useStyles","makeStyles","root","maxWidth","media","MediaCard","classes","Card","CardActionArea","CardMedia","image","title","description","CardContent","Typography","gutterBottom","variant","component","CardActions","GalleryList","imageItems","map","key","InputForm","useState","setPath","setDescription","setTitle","onSubmitForm","a","preventDefault","axios","post","then","getData","catch","err","console","log","onSubmit","type","value","placeholder","onChange","target","App","state","componentDidMount","get","res","allImageItems","data","setState","numLikes","put","error","window","confirm","delete","this","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c2b7bb68.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function DeleteButton(props) {\n  return (\n    <Button\n      onClick={() => props.deleteItem(props.imgObj.id)}\n      size=\"small\"\n      color=\"primary\"\n    >\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 16 16\"\n        className=\"bi bi-trash-fill\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"\n        />\n      </svg>\n    </Button>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function LikeButton(props) {\n  return (\n    <Button\n      onClick={(event) => props.updateLike(props.imgObj.id, props.imgObj.likes)}\n      size=\"small\"\n      color=\"primary\"\n    >\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 16 16\"\n        className=\"bi bi-heart-fill\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n        />\n      </svg>\n    </Button>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function ExpandButton(props) {\n  return (\n    <a href={props.imgObj.path} className=\"img-1\">\n      <Button size=\"small\" color=\"primary\">\n        <svg\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 16 16\"\n          className=\"bi bi-arrows-fullscreen\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344 0a.5.5 0 0 1 .707 0l4.096 4.096V11.5a.5.5 0 1 1 1 0v3.975a.5.5 0 0 1-.5.5H11.5a.5.5 0 0 1 0-1h2.768l-4.096-4.096a.5.5 0 0 1 0-.707zm0-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707zm-4.344 0a.5.5 0 0 1-.707 0L1.025 1.732V4.5a.5.5 0 0 1-1 0V.525a.5.5 0 0 1 .5-.5H4.5a.5.5 0 0 1 0 1H1.732l4.096 4.096a.5.5 0 0 1 0 .707z\"\n          />\n        </svg>\n      </Button>\n    </a>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteButton from \"./Buttons/DeleteButton\";\nimport LikeButton from \"./Buttons/LikeButton\";\nimport ExpandButton from \"./Buttons/ExpandButton\";\n\n//Stylize each card\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 350,\n  },\n  media: {\n    height: 240,\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.imgObj.path}\n          title={props.imgObj.description}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.imgObj.title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.imgObj.description}\n            <br />\n            <span className=\"number-of-likes\">Likes: {props.imgObj.likes}</span>\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <DeleteButton imgObj={props.imgObj} deleteItem={props.deleteItem} />\n        <LikeButton imgObj={props.imgObj} updateLike={props.updateLike} />\n        <ExpandButton imgObj={props.imgObj} />\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ImageCard from \"./ImageCard.js\";\n\nexport default function GalleryList(props) {\n  return (\n    //wrapper for CSS Grid\n    //iterate over object in array and render it\n    <div className=\"wrapper\">\n      {props.imageItems.map((imgObj) => {\n        return (\n          <ImageCard\n            updateLike={props.updateLike}\n            deleteItem={props.deleteItem}\n            key={imgObj.id}\n            imgObj={imgObj}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\n\nexport default function InputForm(props) {\n  //set up state for this component and bring in App.js component thru props\n  const [path, setPath] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  //submit the form\n  const onSubmitForm = async (event) => {\n    event.preventDefault();\n    axios\n      .post(\"/gallery/add-to-gallery\", { path, description, title })\n      .then(props.getData())\n      .catch((err) => console.log(err));\n    setDescription(\"\");\n    setPath(\"\");\n    setTitle(\"\");\n  };\n  return (\n    <div className=\"form-container\">\n      <h3 id=\"form-header\" className=\"text-center mt-1\">\n        Add to the Gallery:\n      </h3>\n      <form className=\"d-flex mb-3\" onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          id=\"title\"\n          className=\"form-control\"\n          value={title}\n          placeholder=\"Give your image a title!\"\n          onChange={(event) => setTitle(event.target.value)}\n        />\n        <input\n          type=\"text\"\n          id=\"path\"\n          className=\"form-control\"\n          value={path}\n          placeholder=\"Give the absolute path of the file!\"\n          onChange={(event) => setPath(event.target.value)}\n        />\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"description\"\n          value={description}\n          placeholder=\"Give your image a description!\"\n          onChange={(event) => setDescription(event.target.value)}\n        />\n        <button className=\"btn btn-success\">Add</button>\n      </form>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport GalleryList from \"../GalleryList\";\nimport InputForm from \"../InputForm\";\n\nclass App extends Component {\n  state = {\n    imageItems: [],\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  }; //get data on initial load\n\n  getData = () => {\n    axios\n      .get(\"/gallery/\")\n      .then((res) => {\n        const allImageItems = res.data;\n        this.setState({ imageItems: allImageItems });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //pass in the item id and its current number of likes, once the server does logic, update the state by calling getData()\n  updateLike = (id, numLikes) => {\n    axios\n      .put(`/gallery/like/${id}`, {\n        likes: numLikes,\n      })\n      .then(this.getData())\n      .catch((error) => console.log(error));\n  };\n\n  deleteItem = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this item?\")) {\n      axios\n        .delete(`/gallery/delete-an-item/${id}`)\n        .then(this.getData())\n        .catch((error) => console.log(error));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Gallery of my life</h1>\n        </header>\n        <hr />\n        <InputForm getData={this.getData} />\n        <GalleryList\n          updateLike={this.updateLike}\n          imageItems={this.state.imageItems}\n          deleteItem={this.deleteItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}